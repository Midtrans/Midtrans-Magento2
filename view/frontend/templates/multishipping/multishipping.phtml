<?php

use Midtrans\Snap\Block\Payment\Multishipping;

/**
 *  Midtrans multishipping payment page
 *
 * @var Multishipping $block
 */
?>
<h2 class="price-label">Grand Total: <b><?php echo $block->getGrossAmount()?></b></h2>
<hr>

<form action="#" id="multishipping-billing-form" class="form multicheckout billing">
    <div class="block block-billing">
        <div class="block-content">
            <div class="box box-billing-address">
                <fieldset class="fieldset">
                    <legend class="legend box-title">
                        <span><?= $block->escapeHtml(__('Billing Address')); ?></span>
                    </legend><br>
                    <div class="box-content">
                        <?php foreach ($block->getBillingAddress() as $key => $item) {
                            echo $block->escapeHtml($item)  . '</br>';
                        } ?>
                    </div>
                </fieldset>
            </div>
        </div>
    </div>
    <div class="actions-toolbar">
        <div class="primary" id="parent-payment-continue">
            <button id="pay-button"
                    type="button"
                    class="action primary continue">
                <span><?= $block->escapeHtml(__('Pay Order')); ?></span>
            </button>
        </div>
        <div class="secondary">
            <a href="<?= $block->escapeHtml($block->getCloseUrl()); ?>" class="action back">
                <span>Cancel Orders</span>
            </a>
        </div>
    </div>
</form>


<script>window.config = <?php /* @escapeNotVerified */ echo \Zend_Json::encode($block->getPaymentConfig()); ?>;</script>
<script type="text/javascript"
        src="<?php echo $block->getPaymentConfig()['js']; ?>"
        data-client-key="<?php echo $block->getPaymentConfig()['clientkey']; ?>">
</script>
<script>
    require([
            'jquery',
            'jquery/ui',
            'uiComponent',
            'mage/url'
        ],
        function ($, ui, Component, url) {

        jQuery(document).ready( function() {
            var merchant_id = window.config.merchantid;
            var mixpanel_key = window.config.mixpanelkey;
            var magento_version = window.config.magentoversion;
            var plugin_version = window.config.pluginversion;

            !function(e,p){if(!p.__SV){var r,l,t=window;try{var n,o,a,i=t.location,c=i.hash;n=function(e,t){return(o=e.match(RegExp(t+"=([^&]*)")))?o[1]:null},c&&n(c,"state")&&("mpeditor"===(a=JSON.parse(decodeURIComponent(n(c,"state")))).action&&(t.sessionStorage.setItem("_mpcehash",c),history.replaceState(a.desiredHash||"",e.title,i.pathname+i.search)))}catch(e){}(window.mixpanel=p)._i=[],p.init=function(e,t,n){function o(e,t){var n=t.split(".");2==n.length&&(e=e[n[0]],t=n[1]),e[t]=function(){e.push([t].concat(Array.prototype.slice.call(arguments,0)))}}var a=p;for(void 0!==n?a=p[n]=[]:n="mixpanel",a.people=a.people||[],a.toString=function(e){var t="mixpanel";return"mixpanel"!==n&&(t+="."+n),e||(t+=" (stub)"),t},a.people.toString=function(){return a.toString(1)+".people (stub)"},r="disable time_event track track_pageview track_links track_forms track_with_groups add_group set_group remove_group register register_once alias unregister identify name_tag set_config reset opt_in_tracking opt_out_tracking has_opted_in_tracking has_opted_out_tracking clear_opt_in_out_tracking people.set people.set_once people.unset people.increment people.append people.union people.track_charge people.clear_charges people.delete_user people.remove".split(" "),l=0;l<r.length;l++)o(a,r[l]);var i="set set_once union unset remove delete".split(" ");a.get_group=function(){function e(e){t[e]=function(){call2_args=arguments,call2=[e].concat(Array.prototype.slice.call(call2_args,0)),a.push([n,call2])}}for(var t={},n=["get_group"].concat(Array.prototype.slice.call(arguments,0)),o=0;o<i.length;o++)e(i[o]);return t},p._i.push([e,t,n])},p.__SV=1.2,(t=e.createElement("script")).type="text/javascript",t.async=!0,t.src="undefined"!=typeof MIXPANEL_CUSTOM_LIB_URL?MIXPANEL_CUSTOM_LIB_URL:"file:"===e.location.protocol&&"//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js".match(/^\/\//)?"https://cdn.mxpnl.com/libs/mixpanel-2-latest.min.js":"//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js",(n=e.getElementsByTagName("script")[0]).parentNode.insertBefore(t,n)}}(document,window.mixpanel||[]),mixpanel.init(mixpanel_key);

            function trackResult(data, merchant_id, plugin_name, status, result) {
                var eventNames = {
                    pay: 'pg-pay',
                    success: 'pg-success',
                    pending: 'pg-pending',
                    error: 'pg-error',
                    close: 'pg-close'
                };
                mixpanel.track(
                    eventNames[status], {
                        merchant_id: merchant_id,
                        cms_name: 'Magento',
                        cms_version: magento_version,
                        plugin_name: plugin_name,
                        plugin_version: plugin_version,
                        snap_token: data,
                        payment_type: result ? result.payment_type : null,
                        order_id: result ? result.order_id : null,
                        status_code: result ? result.status_code : null,
                        gross_amount: result && result.gross_amount ? Number(result.gross_amount) : null,
                    }
                );
            }

            jQuery("#pay-button").click(function(event){
                event.preventDefault();
                trackResult(window.config.token, merchant_id, 'Mutishipping', 'pay', null);
                var retryCount = 0;
                var snapExecuted = false;
                var intervalFunction = 0;
                function execSnapCont() {
                    intervalFunction = setInterval(function () {
                        try {
                            snap.pay(window.config.token,
                                {
                                    skipOrderSummary: true,
                                    showOrderId: true,
                                    onSuccess: function (result) {
                                        trackResult(window.config.token, merchant_id, 'Multishipping Snap', 'success', result);
                                        window.location.replace(url.build('snap/index/finish?order_id=' + result.order_id));
                                        console.log(result.status_message);
                                    },
                                    onPending: function (result) {
                                        trackResult(window.config.token, merchant_id, 'Multishipping Snap', 'pending', result);
                                        window.location.replace(url.build('snap/index/finish'));
                                        console.log(url.build('snap/index/finish'))
                                    },
                                    onError: function (result) {
                                        trackResult(window.config.token, merchant_id, 'Multishipping Snap', 'error', result);
                                        window.location.replace(url.build('snap/index/close'));
                                        console.log(result.status_message);
                                    },
                                    onClose: function () {
                                        console.log("Payment page close")
                                        trackResult(window.config.token, merchant_id, 'Multishipping Snap', 'close');
                                        window.location.replace(url.build('snap/index/close'));
                                    }
                                });
                            var snapExecuted = true;
                        } catch (e) {
                            retryCount++;
                            if (retryCount >= 10) {
                                console.log('try open snap')
                            }
                            console.log(e);
                            console.log("Snap not ready yet... Retrying in 1000ms!");
                        } finally {
                            if (snapExecuted) {
                                clearInterval(intervalFunction);
                                // record 'pay' event to Mixpanel
                                trackResult(window.config.token, merchant_id, 'Fullpayment Snap PopUp', 'pay', null);
                            }
                        }
                    }, 1000);
                }; //end of execsnapcont
                execSnapCont();
            });
        });
    });
</script>
